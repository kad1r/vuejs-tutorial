@{
	ViewData["Title"] = "Form";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Form</h1>

<div id="form-ex">
	<p>
		<input v-model="question" />
	</p>
	<p>{{answer}}</p>
</div>

<div id="vue-form">
</div>

@section scripts{
	<script>
		var watchExampleVM = new Vue({
			el: '#form-ex',
			data: {
				question: '',
				answer: 'I cannot give you an answer until you ask a question!'
			},
			watch: {
				// whenever question changes, this function will run
				question: function (newQuestion, oldQuestion) {
					this.answer = 'Waiting for you to stop typing...'
					this.debouncedGetAnswer()
				}
			},
			created: function () {
				// _.debounce is a function provided by lodash to limit how
				// often a particularly expensive operation can be run.
				// In this case, we want to limit how often we access
				// yesno.wtf/api, waiting until the user has completely
				// finished typing before making the ajax request. To learn
				// more about the _.debounce function (and its cousin
				// _.throttle), visit: https://lodash.com/docs#debounce
				this.debouncedGetAnswer = _.debounce(this.getAnswer, 500)
			},
			methods: {
				getAnswer: function () {
					if (this.question.indexOf('?') === -1) {
						this.answer = 'Questions usually contain a question mark. ;-)'
						return
					}
					this.answer = 'Thinking...'
					var vm = this
					axios.get('https://yesno.wtf/api')
						.then(function (response) {
							vm.answer = _.capitalize(response.data.answer)
						})
						.catch(function (error) {
							vm.answer = 'Error! Could not reach the API. ' + error
						})
				}
			}
		});

		//var vm = new Vue({
		//	el: '#vue-form'
		//});
	</script>
}
